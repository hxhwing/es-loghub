---
apiVersion: v1
kind: Namespace
metadata:
  name: NAMESPACE
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
    name: escluster
    namespace: NAMESPACE
    annotations:
      eck.k8s.elastic.co/downward-node-labels: "topology.kubernetes.io/zone"
spec:
    version: ELASTICSEARCH_VERSION
    # transport:
    #   tls:
    #     subjectAltNames:
    #       - dns: es.testrun.top
    http:
      service:
        spec:
          type: LoadBalancer
    nodeSets:
    - name: master
      count: MASTER_NODE_COUNT
      config:
        node.roles: ["master"]
        node.attr.zone: ${ZONE}
        cluster.routing.allocation.awareness.attributes: zone
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
            accessModes:
            - ReadWriteOnce
            resources:
                requests:
                    storage: 100Gi
            storageClassName: pd-balanced
      podTemplate:
          metadata:
              labels:
                  app: elasticsearch
          spec:
            automountServiceAccountToken: true
            serviceAccountName: elasticsearch-sa
            initContainers:
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
              command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
            containers:
            - name: elasticsearch
              env:
              - name: ZONE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['topology.kubernetes.io/zone']
            nodeSelector:
                app: elasticsearch
    - name: data-hot
      count: HOT_NODE_COUNT
      config:
          node.roles: ["data_content", "data_hot"]
          node.attr.data: hot
          node.attr.zone: ${ZONE}
          cluster.routing.allocation.awareness.attributes: zone
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
            accessModes:
            - ReadWriteOnce
            resources:
                requests:
                    storage: HOT_STORAGE_SIZEGi
            storageClassName: pd-balanced
      podTemplate:
          metadata:
              labels:
                  app: elasticsearch
          spec:
            automountServiceAccountToken: true
            serviceAccountName: elasticsearch-sa
            initContainers:
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
              command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
            containers:
            - name: elasticsearch
              env:
              - name: ZONE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['topology.kubernetes.io/zone']              
            nodeSelector:
                app: elasticsearch
    - name: data-warm
      count: WARM_NODE_COUNT
      config:
          node.roles: ["data_warm"]
          node.attr.data: warm
          node.attr.zone: ${ZONE}
          cluster.routing.allocation.awareness.attributes: zone
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
            accessModes:
            - ReadWriteOnce
            resources:
                requests:
                    storage: WARM_STORAGE_SIZEGi
            storageClassName: pd-balanced
      podTemplate:
          metadata:
              labels:
                  app: elasticsearch
          spec:
            automountServiceAccountToken: true
            serviceAccountName: elasticsearch-sa
            initContainers:
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
              command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
            containers:
            - name: elasticsearch
              env:
              - name: ZONE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['topology.kubernetes.io/zone']              
            nodeSelector:
                app: elasticsearch